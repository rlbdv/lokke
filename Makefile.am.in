### Copyright (C) 2019-2021 Rob Browning <rlb@defaultvalue.org>
### SPDX-License-Identifier: LGPL-2.1-or-later OR EPL-1.0+

# Makefile.am is automatically generated from Makefile.am.in via ./gen-makefile

CLEANFILES =
lokke_clean =
lokke_uninstall =

state:
	mkdir state
lokke_clean += state

state/module-paths:: state
	dev/gen-module-paths | dev/refresh "$@"

Makefile.am: Makefile.am.in gen-makefile state/module-paths
	./gen-makefile state/module-paths

AUTOMAKE_OPTIONS = subdir-objects
ACLOCAL_AMFLAGS = -I m4

LOG_DRIVER = env AM_TAP_AWK='$(AWK)' $(SHELL) $(top_srcdir)/build-aux/tap-driver.sh

EXTRA_DIST = $(TESTS)

# FIXME: preserve symlinks in install tree?
man1_MANS = lok.1 lokke.1
noinst_DATA = lokke.1.txt

# Only opportunistically render the plain text manpage via "-l" for
# now because on at least on FreeBSD rendering via "man -M . lokke >
# lokke.1" or even "groff -mtty-char -Tascii -mandoc -P -ubo ..."
# (see grotty(1) for -ubo) doesn't actually omit formatting escape
# characters.

lokke.1.txt: lokke.1
	if COLUMNS=80 man -l $^ > $@.tmp; then \
	    mv $@.tmp $@; \
	fi
CLEANFILES += lokke.1.txt.tmp

AM_CFLAGS = \
  -g -Wall -Werror -std=gnu11 -fdiagnostics-color=always \
  -fno-strict-aliasing

vpkglibdir = $(pkglibdir)/$(LOKKE_EFFECTIVE_VERSION)
vpkglib_LTLIBRARIES = lib/lokke-reader.la  lib/lokke-pcre2.la lib/lokke-vector.la

# -module can't go here because automake only detects it directly in LDFLAGS
lokke_lib_ldflags = -release $(VERSION) @GUILE_LDFLAGS@ @GUILE_LIBS@

lib_lokke_reader_la_SOURCES = lib/lokke-reader.c
lib_lokke_reader_la_CFLAGS = @GUILE_CFLAGS@ $(AM_CFLAGS)
lib_lokke_reader_la_LDFLAGS = -module $(lokke_lib_ldflags)

lib_lokke_vector_la_SOURCES = lib/lokke-vector.c
lib_lokke_vector_la_CFLAGS = @GUILE_CFLAGS@ $(AM_CFLAGS)
lib_lokke_vector_la_LDFLAGS = -module $(lokke_lib_ldflags)

lib_lokke_pcre2_la_SOURCES = lib/lokke-pcre2.c
lib_lokke_pcre2_la_CFLAGS = @GUILE_CFLAGS@ $(AM_CFLAGS) @PCRE2_CFLAGS@
lib_lokke_pcre2_la_LDFLAGS = -module $(lokke_lib_ldflags) @PCRE2_LIBS@

bin_PROGRAMS = bin/lok-@LOKKE_MAJOR_VERSION@ bin/lokke-@LOKKE_MAJOR_VERSION@
EXTRA_PROGRAMS = guile lok lokke

lokke_cflags = $(AM_CFLAGS) $(GUILE_CFLAGS)
lokke_cflags += -DLOKKE_LIBDIR='"$(modlibdir)"'
lokke_cflags += -DLOKKE_MODULE_ROOT='"$(moddatadir)"'
lokke_cflags += -DLOKKE_COMPILED_ROOT='"$(vpkglibdir)"'

# Note: at the moment lokke_dev_cflags are shared with ./guile
lokke_dev_cflags = $(AM_CFLAGS) $(GUILE_CFLAGS)
lokke_dev_cflags += -DLOKKE_LIBDIR='"$(abs_top_srcdir)/lib/.libs"'
lokke_dev_cflags += -DLOKKE_MODULE_ROOT='"$(abs_top_srcdir)/mod"'
lokke_dev_cflags += -DLOKKE_COMPILED_ROOT='"$(abs_top_srcdir)/mod"'

lok_flavor_cflags = -DLOKKE_PROGRAM_NAME='"lok"' -DLOKKE_MAIN_FN='"lok-main"'
lokke_flavor_cflags = -DLOKKE_PROGRAM_NAME='"lokke"' -DLOKKE_MAIN_FN='"lokke-main"'

lokke_SOURCES = lokke.c
lokke_CFLAGS = $(lokke_dev_cflags) $(lokke_flavor_cflags)
lokke_LDADD = $(GUILE_LIBS)
lokke_DEPENDENCIES = Makefile

lok_SOURCES = lokke.c
lok_CFLAGS = $(lokke_dev_cflags) $(lok_flavor_cflags)
lok_LDADD = $(lokke_LDADD)
lok_DEPENDENCIES = $(lokke_DEPENDENCIES)

bin_lokke_@LOKKE_MAJOR_VERSION@_SOURCES = lokke.c
bin_lokke_@LOKKE_MAJOR_VERSION@_CFLAGS = $(lokke_cflags) $(lokke_flavor_cflags)
bin_lokke_@LOKKE_MAJOR_VERSION@_LDADD = $(lokke_LDADD)
bin_lokke_@LOKKE_MAJOR_VERSION@_DEPENDENCIES = $(lokke_DEPENDENCIES)

bin_lok_@LOKKE_MAJOR_VERSION@_SOURCES = lokke.c
bin_lok_@LOKKE_MAJOR_VERSION@_CFLAGS = $(lokke_cflags) $(lok_flavor_cflags)
bin_lok_@LOKKE_MAJOR_VERSION@_LDADD = $(lokke_LDADD)
bin_lok_@LOKKE_MAJOR_VERSION@_DEPENDENCIES = $(lokke_DEPENDENCIES)

# Potentially confusing to have guile_CFLAGS and GUILE_CFLAGS...
guile_SOURCES = lokke.c
guile_CFLAGS = $(lokke_dev_cflags)
guile_CFLAGS += -DLOKKE_PROGRAM_NAME='"lokke-guile"' -DLOKKE_JUST_RUN_GUILE=1
guile_LDADD = $(GUILE_LIBS)
guile_DEPENDENCIES = Makefile

# Avoids the otherwise circular dependency
BUILT_SOURCES = guile lok lokke \
  lib/lokke-reader.x lib/lokke-pcre2.x lib/lokke-vector.x lokke.1 \
  mod/lokke/base/version.scm

# FIXME: see guile's am/guilec for a way to order the install wrt timestamps

mod_clj_srcs =
mod_scm_srcs =
compiled_go = $(mod_clj_srcs:%.clj=%.go) $(mod_scm_srcs:%.scm=%.go)

$(compiled_go): $(vpkglib_LTLIBRARIES)

moddatadir = $(pkgdatadir)/$(LOKKE_EFFECTIVE_VERSION)
modlibdir = $(pkglibdir)/$(LOKKE_EFFECTIVE_VERSION)
CLEANFILES += $(compiled_go)

# This section is automatically generated
@MODULE_FILES@
# End of automatically generated section


export LOKKE_TEST_PROTOCOL = tap

TESTS = \
  test/equality \
  test/clojure-comparison \
  test/clojure-defmacro \
  test/clojure-dynamic \
  test/clojure-evaluation \
  test/clojure-exceptions \
  test/clojure-metadata \
  test/clojure-ns \
  test/clojure-string \
  test/clojure-vector \
  test/clojure-pr \
  test/lokke-comparison \
  test/lokke-core \
  test/lokke-destructure \
  test/lokke-exception \
  test/lokke-hash-map \
  test/lokke-hash-set \
  test/lokke-metadata \
  test/lokke-ns \
  test/lokke-pr \
  test/lokke-scm-atom \
  test/lokke-scm-promise \
  test/lokke-scm-vector \
  test/lokke-symbol \
  test/example-nbody \
  test/ns-lokke-io \
  test/ns-lokke-shell \
  test/reader-basics \
  test/clojure-collection \
  test/clojure-destructure \
  test/clojure-fn \
  test/clojure-math \
  test/clojure-metadata \
  test/clojure-walk \
  test/clojure-zip \
  test/standalone-install \
  test/startup-randomization \
  test/trivial-deps

check-everything:
	$(MAKE) \
	  LOKKE_TEST_ALLOW_RANDOM_DOWNLOADS=t LOKKE_TEST_EXT_BEHAVIOR=t \
	  check

lokke_clean += test/tmp

SUFFIXES = .x .clj.go .scm.go

.c.x:
	guile-snarf -o $@ $< @GUILE_CFLAGS@ $(AM_CFLAGS)

.clj.go:
	GUILE=$(CURDIR)/guile \
	GUILE_AUTO_COMPILE=0 \
	$(GUILD) compile \
	  -Wunbound-variable -Wmacro-use-before-definition \
	  -Warity-mismatch -Wformat \
	--from=lokke -o $@ $<

.scm.go:
	GUILE=$(CURDIR)/guile \
	GUILE_AUTO_COMPILE=0 \
	$(GUILD) compile \
	  -Wunbound-variable -Wmacro-use-before-definition \
	  -Warity-mismatch -Wformat \
	-o $@ $<

lokke_dest_scripts = "$(DESTDIR)$(bindir)"/lok "$(DESTDIR)$(bindir)"/lokke
lokke_uninstall += $(lokke_dest_scripts)

$(lokke_dest_scripts):
	$(install_sh) -d "$(DESTDIR)$(bindir)"
	cd "$(DESTDIR)$(bindir)" && $(LN_S) -f lok-@LOKKE_MAJOR_VERSION@ lok
	cd "$(DESTDIR)$(bindir)" && $(LN_S) -f lokke-@LOKKE_MAJOR_VERSION@ lokke

# Install a slightly different version of the tools
# moduledir is defined by gen-makefile
# FIXME: tmp files?
install-data-hook: $(lokke_dest_scripts)

uninstall-local:
	rm -rf $(lokke_uninstall)

clean-local:
	rm -rf $(lokke_clean)
